#!/bin/bash -e

# OPENSHIFT_DATA_DIR - Directory to store application data files. Preserved across git-pushes. Not shared across gears.
# OPENSHIFT_REPO_DIR - Repository containing the currently deployed version (of the application)
# OPENSHIFT_TMP_DIR - A temporary directory
# OPENSHIFT_SNPU_LOG_DIR - Where your cartridge-specific logs are stored

function start {
    cd $OPENSHIFT_REPO_DIR

    # build on first time
    [ -d target ] || build

    # this can be a leftover from a dead play app
    rm -f target/universal/stage/RUNNING_PID

    EXECUTABLE=$(ls target/universal/stage/bin/ | grep -v bat) # we need other one, not bat
    nohup target/universal/stage/bin/${EXECUTABLE} -mem 512 > $OPENSHIFT_SNPU_DIR/logs/app.log 2>&1 &
}

function stop {
    killall java || true
}

function restart {
    stop
    start
}

function build {
    # Workaround for failure in npm install when a package in package.json
    # points to a git commit.
    # This issue occurs because we are running in the context of a
    # git post receive-hook
    unset GIT_DIR
    unset GIT_WORK_TREE

    cd ${OPENSHIFT_REPO_DIR}
    ${OPENSHIFT_DATA_DIR}/sbt/bin/sbt \
      -sbt-dir ${OPENSHIFT_DATA_DIR}/.sbt \
      -ivy ${OPENSHIFT_DATA_DIR}/.ivy2 \
       -mem 512 \
       clean stage
}

function tidy {
    shopt -s dotglob
    rm -rf $OPENSHIFT_TMP_DIR/*
}

function catchall {
    echo ""
}

case "$1" in
  start)       start ;;
  stop)        stop ;;
  restart)     restart ;;
  status)      status ;;
  reload)      catchall ;;
  tidy)        tidy ;;
  pre-build)   catchall ;;
  build)       build ;;
  deploy)      catchall ;;
  post-deploy) catchall ;;
  *)           exit 0
esac

exit 0
